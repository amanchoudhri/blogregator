name: Blog Monitor

on:
  schedule:
    # Run every 24 hours at midnight UTC
    - cron: '0 0 * * *'
  workflow_dispatch:  # Allow manual triggering
    inputs:
      blog_id:
        description: 'Specific blog ID to check (optional)'
        required: false
        default: ''

jobs:
  check-blogs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Install dependencies
      run: uv sync
      
    - name: Check for new blog posts
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
      run: |
        if [ -n "${{ github.event.inputs.blog_id }}" ]; then
          uv run python -m blogregator.cli run-check --blog-id ${{ github.event.inputs.blog_id }} -y
        else
          uv run python -m blogregator.cli run-check -y
        fi
    - name: Send newsletter (if new posts found)
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
      run: |
        uv run python -m blogregator.cli send-newsletter
        
    - name: Show recent activity (for debugging)
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        uv run python -c "
        from blogregator.database import get_connection
        conn = get_connection()
        cursor = conn.cursor()
        cursor.execute('SELECT COUNT(*) FROM posts WHERE discovered_date > NOW() - INTERVAL \\'1 day\\'')
        recent_posts = cursor.fetchone()['count']
        print(f'Posts discovered in last 24 hours: {recent_posts}')
        conn.close()
        "
